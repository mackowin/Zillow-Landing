{"remainingRequest":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/src/views/ideas/green-card/GreenCardFAQ.vue?vue&type=template&id=42f9ca0a&","dependencies":[{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/src/views/ideas/green-card/GreenCardFAQ.vue","mtime":1669058976759},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1611962706588},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1611962713166},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1611962706588},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/vue-loader/lib/index.js","mtime":1611962713166}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
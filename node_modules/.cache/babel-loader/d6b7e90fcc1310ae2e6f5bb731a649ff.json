{"remainingRequest":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/babel-loader/lib/index.js!/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/src/store/contact-module.js","dependencies":[{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/src/store/contact-module.js","mtime":1625764724680},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1611962706588},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/babel-loader/lib/index.js","mtime":1611962706532},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/eslint-loader/index.js","mtime":1611962712284}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY29udGFjdFNlcnZpY2UgfSBmcm9tICIuLi9zZXJ2aWNlcy9jb250YWN0c2VydmljZSI7CnZhciBzdGF0ZSA9IHsKICBzdGF0dXM6IHt9Cn07CnZhciBhY3Rpb25zID0gewogIHNlbmRDb250YWN0TWVzc2FnZTogZnVuY3Rpb24gc2VuZENvbnRhY3RNZXNzYWdlKF9yZWYsIG1lc3NhZ2UpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIGNvbW1pdCgnc2VuZENvbnRhY3RNZXNzYWdlUmVxdWVzdCcpOwogICAgcmV0dXJuIGNvbnRhY3RTZXJ2aWNlLnNlbmRDb250YWN0TWVzc2FnZShtZXNzYWdlKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgY29tbWl0KCdzZW5kQ29udGFjdE1lc3NhZ2VTdWNjZXNzJyk7CiAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgIGNvbW1pdCgnc2VuZENvbnRhY3RNZXNzYWdlRmFpbHVyZScpOwogICAgfSk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNlbmRDb250YWN0TWVzc2FnZVJlcXVlc3Q6IGZ1bmN0aW9uIHNlbmRDb250YWN0TWVzc2FnZVJlcXVlc3Qoc3RhdGUpIHsKICAgIHN0YXRlLnN0YXR1cyA9IHsKICAgICAgc2VuZGluZ01lc3NhZ2U6IHRydWUKICAgIH07CiAgfSwKICBzZW5kQ29udGFjdE1lc3NhZ2VTdWNjZXNzOiBmdW5jdGlvbiBzZW5kQ29udGFjdE1lc3NhZ2VTdWNjZXNzKHN0YXRlKSB7CiAgICBzdGF0ZS5zdGF0dXMgPSB7CiAgICAgIG1lc3NhZ2VTZW50OiB0cnVlCiAgICB9OwogIH0sCiAgc2VuZENvbnRhY3RNZXNzYWdlRmFpbHVyZTogZnVuY3Rpb24gc2VuZENvbnRhY3RNZXNzYWdlRmFpbHVyZShzdGF0ZSkgewogICAgc3RhdGUuc3RhdHVzID0gewogICAgICBtZXNzYWdlRmFpbHVyZTogdHJ1ZQogICAgfTsKICB9Cn07CmV4cG9ydCB2YXIgY29udGFjdCA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/src/store/contact-module.js"],"names":["contactService","state","status","actions","sendContactMessage","message","commit","then","mutations","sendContactMessageRequest","sendingMessage","sendContactMessageSuccess","messageSent","sendContactMessageFailure","messageFailure","contact","namespaced"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,4BAA7B;AAEA,IAAMC,KAAK,GAAG;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAd;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,kBADY,oCACmBC,OADnB,EAC4B;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;AACpCA,IAAAA,MAAM,CAAC,2BAAD,CAAN;AACA,WAAON,cAAc,CAACI,kBAAf,CAAkCC,OAAlC,EAA2CE,IAA3C,CACH,YAAM;AACFD,MAAAA,MAAM,CAAC,2BAAD,CAAN;AACH,KAHE,EAIH,YAAM;AACFA,MAAAA,MAAM,CAAC,2BAAD,CAAN;AACH,KANE,CAAP;AAQH;AAXW,CAAhB;AAcA,IAAME,SAAS,GAAG;AACdC,EAAAA,yBADc,qCACYR,KADZ,EACmB;AAC7BA,IAAAA,KAAK,CAACC,MAAN,GAAe;AAAEQ,MAAAA,cAAc,EAAE;AAAlB,KAAf;AACH,GAHa;AAIdC,EAAAA,yBAJc,qCAIYV,KAJZ,EAImB;AAC7BA,IAAAA,KAAK,CAACC,MAAN,GAAe;AAAEU,MAAAA,WAAW,EAAE;AAAf,KAAf;AACH,GANa;AAOdC,EAAAA,yBAPc,qCAOYZ,KAPZ,EAOmB;AAC7BA,IAAAA,KAAK,CAACC,MAAN,GAAe;AAAEY,MAAAA,cAAc,EAAE;AAAlB,KAAf;AACH;AATa,CAAlB;AAYA,OAAO,IAAMC,OAAO,GAAG;AACnBC,EAAAA,UAAU,EAAE,IADO;AAEnBf,EAAAA,KAAK,EAALA,KAFmB;AAGnBE,EAAAA,OAAO,EAAPA,OAHmB;AAInBK,EAAAA,SAAS,EAATA;AAJmB,CAAhB","sourcesContent":["import {contactService} from \"../services/contactservice\";\n\nconst state = {status: {}};\n\nconst actions = {\n    sendContactMessage({ commit }, message) {\n        commit('sendContactMessageRequest');\n        return contactService.sendContactMessage(message).then(\n            () => {\n                commit('sendContactMessageSuccess');\n            },\n            () => {\n                commit('sendContactMessageFailure');\n            }\n        );\n    },\n};\n\nconst mutations = {\n    sendContactMessageRequest(state) {\n        state.status = { sendingMessage: true };\n    },\n    sendContactMessageSuccess(state) {\n        state.status = { messageSent: true };\n    },\n    sendContactMessageFailure(state) {\n        state.status = { messageFailure: true };\n    },\n};\n\nexport const contact = {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n};\n\n"]}]}
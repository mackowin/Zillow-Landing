{"remainingRequest":"/Users/nataliamackowiak/Documents/Startup/MVPs/node_modules/babel-loader/lib/index.js!/Users/nataliamackowiak/Documents/Startup/MVPs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nataliamackowiak/Documents/Startup/MVPs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nataliamackowiak/Documents/Startup/MVPs/src/ideas/memes/UploadImageMemes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nataliamackowiak/Documents/Startup/MVPs/src/ideas/memes/UploadImageMemes.vue","mtime":1669831089708},{"path":"/Users/nataliamackowiak/Documents/Startup/MVPs/node_modules/cache-loader/dist/cjs.js","mtime":1611962706588},{"path":"/Users/nataliamackowiak/Documents/Startup/MVPs/node_modules/babel-loader/lib/index.js","mtime":1611962706532},{"path":"/Users/nataliamackowiak/Documents/Startup/MVPs/node_modules/cache-loader/dist/cjs.js","mtime":1611962706588},{"path":"/Users/nataliamackowiak/Documents/Startup/MVPs/node_modules/vue-loader/lib/index.js","mtime":1611962713166}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyBodHRwczovL2dpdGh1Yi5jb20vcm96a2xhZC92dWUtbWVtZS1nZW5lcmF0b3IKQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJELnByb3RvdHlwZS53cmFwRmlsbFRleHQgPSBmdW5jdGlvbiAodGV4dCwgeCwgeSwgbWF4V2lkdGgsIGxpbmVIZWlnaHQpIHsKICB2YXIgbGluZXMgPSB0ZXh0LnNwbGl0KCJcbiIpOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgd29yZHMgPSBsaW5lc1tpXS5zcGxpdCgnICcpOwogICAgdmFyIGxpbmUgPSAnJzsKCiAgICBmb3IgKHZhciBuID0gMDsgbiA8IHdvcmRzLmxlbmd0aDsgbisrKSB7CiAgICAgIHZhciB0ZXN0TGluZSA9IGxpbmUgKyB3b3Jkc1tuXSArICcgJzsKICAgICAgdmFyIG1ldHJpY3MgPSB0aGlzLm1lYXN1cmVUZXh0KHRlc3RMaW5lKTsKICAgICAgdmFyIHRlc3RXaWR0aCA9IG1ldHJpY3Mud2lkdGg7CgogICAgICBpZiAodGVzdFdpZHRoID4gbWF4V2lkdGggJiYgbiA+IDApIHsKICAgICAgICB0aGlzLmZpbGxUZXh0KGxpbmUsIHgsIHkpOwogICAgICAgIGxpbmUgPSB3b3Jkc1tuXSArICcgJzsKICAgICAgICB5ICs9IGxpbmVIZWlnaHQ7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbGluZSA9IHRlc3RMaW5lOwogICAgICB9CiAgICB9CgogICAgdGhpcy5maWxsVGV4dChsaW5lLCB4LCB5KTsKICAgIHkgKz0gbGluZUhlaWdodDsKICB9Cn07CgpDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQucHJvdG90eXBlLndyYXBTdHJva2VUZXh0ID0gZnVuY3Rpb24gKHRleHQsIHgsIHksIG1heFdpZHRoLCBsaW5lSGVpZ2h0KSB7CiAgdmFyIGxpbmVzID0gdGV4dC5zcGxpdCgiXG4iKTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykgewogICAgdmFyIHdvcmRzID0gbGluZXNbaV0uc3BsaXQoJyAnKTsKICAgIHZhciBsaW5lID0gJyc7CgogICAgZm9yICh2YXIgbiA9IDA7IG4gPCB3b3Jkcy5sZW5ndGg7IG4rKykgewogICAgICB2YXIgdGVzdExpbmUgPSBsaW5lICsgd29yZHNbbl0gKyAnICc7CiAgICAgIHZhciBtZXRyaWNzID0gdGhpcy5tZWFzdXJlVGV4dCh0ZXN0TGluZSk7CiAgICAgIHZhciB0ZXN0V2lkdGggPSBtZXRyaWNzLndpZHRoOwoKICAgICAgaWYgKHRlc3RXaWR0aCA+IG1heFdpZHRoICYmIG4gPiAwKSB7CiAgICAgICAgdGhpcy5zdHJva2VUZXh0KGxpbmUsIHgsIHkpOwogICAgICAgIGxpbmUgPSB3b3Jkc1tuXSArICcgJzsKICAgICAgICB5ICs9IGxpbmVIZWlnaHQ7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbGluZSA9IHRlc3RMaW5lOwogICAgICB9CiAgICB9CgogICAgdGhpcy5zdHJva2VUZXh0KGxpbmUsIHgsIHkpOwogICAgeSArPSBsaW5lSGVpZ2h0OwogIH0KfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnI21lbWUnLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIC8vIFVwb24gbW91bnRpbmcgb2YgdGhlIGNvbXBvbmVudCwgd2UgYWNjZXNzZWQgdGhlIC5iaW5kKHsuLi59KQogICAgLy8gZnVuY3Rpb24gdG8gcHV0IGFuIGluaXRpYWwgaW1hZ2Ugb24gdGhlIGNhbnZhcy4KICAgIHRoaXMuJHJlZnMuY3JvcHBpZVJlZi5iaW5kKHsKICAgICAgdXJsOiAnaHR0cDovL2kuaW1ndXIuY29tL0Z2MllPTTYuanBnJwogICAgfSk7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMuY3JvcCgpOwogICAgfSwgMTAwMCk7CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3JvcHBlZDogbnVsbCwKICAgICAgaW1hZ2VzOiBbJ2h0dHA6Ly9pLmltZ3VyLmNvbS9mSE50UFhYLmpwZycsICdodHRwOi8vaS5pbWd1ci5jb20vZWNNVW5nVS5qcGcnLCAnaHR0cDovL2kuaW1ndXIuY29tLzdvTzZ6cmguanBnJywgJ2h0dHA6Ly9pLmltZ3VyLmNvbS9taVZrQkgyLmpwZycsICdodHRwOi8vaS5pbWd1ci5jb20vRnYyWU9NNi5qcGcnXSwKICAgICAgY2FudmFzRWxlbWVudElkOiAnY2FudmFzJywKICAgICAgd2lkdGg6IDYwMCwKICAgICAgaGVpZ2h0OiA0MDAsCiAgICAgIGltYWdlOiAnJywKICAgICAgcHJlc2V0czogWycuLi9yZXNvdXJjZXMvbWVtZTEuanBnJywgJ2Fzc2V0cy9tZW1lMi5qcGcnXSwKICAgICAgdGV4dDogJycsCiAgICAgIHRleHRNYXhXaWR0aDogMjUwLAogICAgICB0ZXh0U3Ryb2tlU3R5bGU6ICcjMDAwMDAwJywKICAgICAgdGV4dEZpbGxTdHlsZTogJyNGRkZGRkYnLAogICAgICB0ZXh0TGluZVdpZHRoOiAyLAogICAgICB0ZXh0UG9zaXRpb246IHsKICAgICAgICB4OiAyMCwKICAgICAgICB5OiA2MAogICAgICB9LAogICAgICB0ZXh0Rm9udDogJzQ4cHggIkltcGFjdCIsIHNhbnMtc2VyaWYnLAogICAgICB0ZXh0TGluZUhlaWdodDogNjAKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBiaW5kOiBmdW5jdGlvbiBiaW5kKCkgewogICAgICAvLyBSYW5kb21pemUgY2F0IHBob3Rvcywgbm90aGluZyBzcGVjaWFsIGhlcmUuCiAgICAgIHZhciB1cmwgPSB0aGlzLmltYWdlc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLmltYWdlcy5sZW5ndGgpXTsgLy8gSnVzdCBsaWtlIHdoYXQgd2UgZGlkIHdpdGggLmJpbmQoey4uLn0pIG9uIAogICAgICAvLyB0aGUgbW91bnRlZCgpIGZ1bmN0aW9uIGFib3ZlLgoKICAgICAgdGhpcy4kcmVmcy5jcm9wcGllUmVmLmJpbmQoewogICAgICAgIHVybDogdXJsCiAgICAgIH0pOwogICAgfSwKICAgIC8vIENBTExCQUNLIFVTQUdFCiAgICBjcm9wOiBmdW5jdGlvbiBjcm9wKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIC8vIEhlcmUgd2UgYXJlIGdldHRpbmcgdGhlIHJlc3VsdCB2aWEgY2FsbGJhY2sgZnVuY3Rpb24KICAgICAgLy8gYW5kIHNldCB0aGUgcmVzdWx0IHRvIHRoaXMuY3JvcHBlZCB3aGljaCBpcyBiZWluZyAKICAgICAgLy8gdXNlZCB0byBkaXNwbGF5IHRoZSByZXN1bHQgYWJvdmUuCiAgICAgIHZhciBvcHRpb25zID0gewogICAgICAgIGZvcm1hdDogJ2pwZWcnCiAgICAgIH07CiAgICAgIHRoaXMuJHJlZnMuY3JvcHBpZVJlZi5yZXN1bHQob3B0aW9ucywgZnVuY3Rpb24gKG91dHB1dCkgewogICAgICAgIF90aGlzMi5jcm9wcGVkID0gb3V0cHV0OwogICAgICB9KTsKICAgIH0sCiAgICAvLyBFVkVOVCBVU0FHRQogICAgY3JvcFZpYUV2ZW50OiBmdW5jdGlvbiBjcm9wVmlhRXZlbnQoKSB7CiAgICAgIHRoaXMuJHJlZnMuY3JvcHBpZVJlZi5yZXN1bHQodGhpcy5vcHRpb25zKTsKICAgIH0sCiAgICByZXN1bHQ6IGZ1bmN0aW9uIHJlc3VsdChvdXRwdXQpIHsKICAgICAgdGhpcy5jcm9wcGVkID0gb3V0cHV0OwogICAgfSwKICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKHZhbCkgewogICAgICBjb25zb2xlLmxvZyh2YWwpOwogICAgfSwKICAgIHJvdGF0ZTogZnVuY3Rpb24gcm90YXRlKHJvdGF0aW9uQW5nbGUpIHsKICAgICAgLy8gUm90YXRlcyB0aGUgaW1hZ2UKICAgICAgdGhpcy4kcmVmcy5jcm9wcGllUmVmLnJvdGF0ZShyb3RhdGlvbkFuZ2xlKTsKICAgIH0sCiAgICBjcm9wcGllSW5pdGlhbGl6ZWQ6IGZ1bmN0aW9uIGNyb3BwaWVJbml0aWFsaXplZCgpIHsKICAgICAgLy8gVGhpcyBtZXRob2Qgd2lsbCBiZSBleGVjdXRlZCB3aGVuIHRoZSBjcm9wcGllIGlzIGluaXRpYWxpemVkCiAgICAgIC8vIFlvdSBjYW4gdXNlIGl0IHRvIHNldCB0aGUgaW1hZ2UKICAgICAgLy8gdGhpcy4kcmVmcy5jcm9wcGllUmVmLmJpbmQoewogICAgICAvLyAgIHVybDogJ2h0dHA6Ly9pLmltZ3VyLmNvbS9GdjJZT002LmpwZycsCiAgICAgIC8vIH0pOwogICAgICBjb25zb2xlLmxvZygnQ3JvcHBpZSB3YXMgaW5pdGlhbGl6ZWQnKTsKICAgIH0sCiAgICBvbkZpbGVDaGFuZ2U6IGZ1bmN0aW9uIG9uRmlsZUNoYW5nZShldmVudCkgewogICAgICB2YXIgZmlsZXMgPSBldmVudC50YXJnZXQuZmlsZXMgfHwgZXZlbnQuZGF0YVRyYW5zZmVyLmZpbGVzOwogICAgICBpZiAoIWZpbGVzLmxlbmd0aCkgcmV0dXJuOwogICAgICB0aGlzLmNyZWF0ZUltYWdlKGZpbGVzWzBdKTsKICAgIH0sCiAgICBvblRleHRDaGFuZ2U6IGZ1bmN0aW9uIG9uVGV4dENoYW5nZSgpIHsKICAgICAgdGhpcy5yZXBhaW50KCk7CiAgICB9LAogICAgY3JlYXRlSW1hZ2U6IGZ1bmN0aW9uIGNyZWF0ZUltYWdlKGZpbGUpIHsKICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHZhciB2bSA9IHRoaXM7CgogICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgdm0uaW1hZ2UgPSBldmVudC50YXJnZXQucmVzdWx0OwogICAgICAgIHZtLnJlcGFpbnQoKTsKICAgICAgfTsKCiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwogICAgfSwKICAgIHNldEltYWdlVG9DYW52YXM6IGZ1bmN0aW9uIHNldEltYWdlVG9DYW52YXModXJsLCBjYWxsYmFjaykgewogICAgICB2YXIgY3R4ID0gdGhpcy5nZXRDb250ZXh0KCk7CiAgICAgIHZhciBiYWNrZ3JvdW5kID0gbmV3IEltYWdlKCk7CiAgICAgIGJhY2tncm91bmQuc3JjID0gdXJsOwoKICAgICAgYmFja2dyb3VuZC5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgY3R4LmRyYXdJbWFnZShiYWNrZ3JvdW5kLCAwLCAwKTsKCiAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgIH0KICAgICAgfTsKICAgIH0sCiAgICBzZXRUZXh0VG9DYW52YXM6IGZ1bmN0aW9uIHNldFRleHRUb0NhbnZhcyh0ZXh0KSB7CiAgICAgIHZhciBjb250ZXh0ID0gdGhpcy5nZXRDb250ZXh0KCk7CiAgICAgIGNvbnRleHQuZm9udCA9IHRoaXMudGV4dEZvbnQ7CiAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gdGhpcy50ZXh0RmlsbFN0eWxlOwogICAgICBjb250ZXh0LndyYXBGaWxsVGV4dCh0ZXh0LCB0aGlzLnRleHRQb3NpdGlvbi54LCB0aGlzLnRleHRQb3NpdGlvbi55LCB0aGlzLnRleHRNYXhXaWR0aCwgdGhpcy50ZXh0TGluZUhlaWdodCk7CiAgICAgIGNvbnRleHQuc3Ryb2tlU3R5bGUgPSB0aGlzLnRleHRTdHJva2VTdHlsZTsKICAgICAgY29udGV4dC5saW5lV2lkdGggPSB0aGlzLnRleHRMaW5lV2lkdGg7CiAgICAgIGNvbnRleHQud3JhcFN0cm9rZVRleHQodGV4dCwgdGhpcy50ZXh0UG9zaXRpb24ueCwgdGhpcy50ZXh0UG9zaXRpb24ueSwgdGhpcy50ZXh0TWF4V2lkdGgsIHRoaXMudGV4dExpbmVIZWlnaHQpOwogICAgfSwKICAgIGdldENvbnRleHQ6IGZ1bmN0aW9uIGdldENvbnRleHQoKSB7CiAgICAgIHJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmNhbnZhc0VsZW1lbnRJZCkuZ2V0Q29udGV4dCgiMmQiKTsKICAgIH0sCiAgICByZXBhaW50OiBmdW5jdGlvbiByZXBhaW50KCkgewogICAgICB2YXIgdm0gPSB0aGlzOwogICAgICBpZiAodGhpcy5pbWFnZSA9PSAnJykgdGhpcy5zZXRUZXh0VG9DYW52YXModGhpcy50ZXh0KTsKICAgICAgdGhpcy5zZXRJbWFnZVRvQ2FudmFzKHRoaXMuaW1hZ2UsIGZ1bmN0aW9uICgpIHsKICAgICAgICB2bS5zZXRUZXh0VG9DYW52YXModm0udGV4dCk7CiAgICAgIH0pOwogICAgfSwKICAgIHJlc2V0OiBmdW5jdGlvbiByZXNldCgpIHsKICAgICAgdGhpcy5pbWFnZSA9ICcnOwogICAgICB0aGlzLnRleHQgPSAnJzsKICAgICAgdGhpcy53aWR0aCA9IDYwMDsKICAgICAgdGhpcy5oZWlnaHQgPSA0NTA7CiAgICAgIHRoaXMudGV4dFN0cm9rZVN0eWxlID0gJyMwMDAwMDAnOwogICAgICB0aGlzLnRleHRGaWxsU3R5bGUgPSAnI0ZGRkZGRic7CiAgICAgIHRoaXMucmVwYWludCgpOwogICAgICB0aGlzLmdldENvbnRleHQoKS5jbGVhclJlY3QoMCwgMCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpOwogICAgfSwKICAgIGRvd25sb2FkOiBmdW5jdGlvbiBkb3dubG9hZCgpIHsKICAgICAgdmFyIGR0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5jYW52YXNFbGVtZW50SWQpLnRvRGF0YVVSTCgnaW1hZ2UvcG5nJyk7CiAgICAgIC8qIENoYW5nZSBNSU1FIHR5cGUgdG8gdHJpY2sgdGhlIGJyb3dzZXIgdG8gZG93bmxvYWQgdGhlIGZpbGUgaW5zdGVhZCBvZiBkaXNwbGF5aW5nIGl0ICovCgogICAgICBkdCA9IGR0LnJlcGxhY2UoL15kYXRhOmltYWdlXC9bXjtdKi8sICdkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpOwogICAgICAvKiBJbiBhZGRpdGlvbiB0byA8YT4ncyAiZG93bmxvYWQiIGF0dHJpYnV0ZSwgeW91IGNhbiBkZWZpbmUgSFRUUC1zdHlsZSBoZWFkZXJzICovCgogICAgICBkdCA9IGR0LnJlcGxhY2UoL15kYXRhOmFwcGxpY2F0aW9uXC9vY3RldC1zdHJlYW0vLCAnZGF0YTphcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07aGVhZGVycz1Db250ZW50LURpc3Bvc2l0aW9uJTNBJTIwYXR0YWNobWVudCUzQiUyMGZpbGVuYW1lPU1lbWUucG5nJyk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkb3dubG9hZCcpLmhyZWYgPSBkdDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["UploadImageMemes.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\" style=\"padding-top: 4rem; padding-bottom: 4rem\">\n    <div id=\"meme\">\n\n      <canvas id=\"canvas\" v-bind:width=\"width\" v-bind:height=\"height\" style=\"margin-bottom: 1rem\"></canvas>\n\n      <!-- Image settings -->\n      <div class=\"row\">\n        <div class=\"col-sm-6\">\n          <div class=\"form-group\" style=\"margin-bottom: 2rem\">\n            <label for=\"image\" class=\"control-label\" style=\"margin-right: 10px\">\n                Upload custom image:\n            </label>\n            <input type=\"file\" id=\"image\" @change=\"onFileChange\">\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"width\" class=\"control-label\">\n                Image width\n            </label>\n            <input type=\"number\" id=\"width\" v-model=\"width\" class=\"form-control\">\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"height\" class=\"control-label\">\n                Image height\n            </label>\n            <input type=\"number\" id=\"height\" v-model=\"height\" class=\"form-control\">\n          </div>\n        </div>\n      </div>\n\n\n      <!-- Photo crop -->\n      <div class=\"row\" style=\"margin-top: 4rem;\">\n        <div class=\"col-12\">\n          <div class=\"container\" style=\"background-color: #eee; padding-top: 2rem\">\n            <div class=\"row justify-content-md-center\">\n              <div class=\"col-xs-12 col-md-6\">\n                <vue-croppie\n                    ref=\"croppieRef\"\n                    :enableOrientation=\"true\"\n                    @result=\"result\"\n                    :boundary=\"{height: 350, width: 350}\"\n                    :viewport=\"{ width:250, height:250, 'type':'circle' }\"\n                    @update=\"update\"\n                    :croppieInitialized=\"croppieInitialized\">\n                </vue-croppie>\n              </div>\n              <div class=\"col-xs-12 col-md-6\">\n                <img width=\"350\" :src=\"cropped\" alt=\"\" class=\"rounded mx-auto d-block img-thumbnail\" style=\"min-height: 350px;\">\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"row mt-5 mb-5\">\n            <div class=\"col-xs-12 col-md-12 text-left\">\n              <button class=\"btn btn-dark\" @click=\"bind()\" style=\"margin-right: 5px\">Bind</button>\n              <button class=\"btn btn-dark\" @click=\"rotate(+90)\" style=\"margin-right: 5px\">Rotate Left</button>\n              <button class=\"btn btn-dark\" @click=\"rotate(-90)\" style=\"margin-right: 5px\">Rotate Right</button>\n              <button class=\"btn btn-dark\" @click=\"crop()\">Crop</button>\n            </div>\n          </div>\n        \n        </div>\n      </div>\n\n        \n      <!-- Text settings -->\n      <div class=\"row\" style=\"margin-top: 4rem\">\n        <div class=\"col-sm-6\">\n          <div class=\"form-group\">\n            <label for=\"text\" class=\"control-label\">\n                Add text\n            </label>\n            <textarea id=\"text\" v-model=\"text\" class=\"form-control\" rows=\"8\" @keyup=\"onTextChange\" placeholder=\"Write your text\"></textarea>\n          </div>\n\n          <div class=\"row\">                  \n            <div class=\"form-group col-sm-3\">\n              <label for=\"textStrokeStyle\" class=\"control-label\" style=\"margin-right: 5px\">\n                  Stroke\n              </label>\n              <input type=\"color\" id=\"textStrokeStyle\" v-model=\"textStrokeStyle\" @change=\"onTextChange\">\n            </div>\n\n            <div class=\"form-group col-sm-3\">\n              <label for=\"textFillStyle\" class=\"control-label\" style=\"margin-right: 5px\">\n                  Fill\n              </label>\n              <input type=\"color\" id=\"textFillStyle\" v-model=\"textFillStyle\" @change=\"onTextChange\">\n            </div>\n          </div>\n        </div>\n      </div>\n    \n\n      <div class=\"row\" style=\"margin-top: 2rem; margin-bottom: 3rem\">\n        <a class=\"col-sm-3 btn btn-primary btn-register btn-profile\" download=\"Meme.png\" @click=\"download\" id=\"download\" href=\"#\" style=\"margin-right: 10px\">Download</a>\n        <button type=\"button\" class=\"btn btn-primary btn-assess\" @click=\"reset\">Reset</button>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\n\n// https://github.com/rozklad/vue-meme-generator\n\n  CanvasRenderingContext2D.prototype.wrapFillText = function (text, x, y, maxWidth, lineHeight) {\n\n      var lines = text.split(\"\\n\");\n    \n      for (var i = 0; i < lines.length; i++) {\n    \n        var words = lines[i].split(' ');\n        var line = '';\n    \n        for (var n = 0; n < words.length; n++) {\n          var testLine = line + words[n] + ' ';\n          var metrics = this.measureText(testLine);\n          var testWidth = metrics.width;\n          if (testWidth > maxWidth && n > 0) {\n            this.fillText(line, x, y);\n            line = words[n] + ' ';\n            y += lineHeight;\n          }\n          else {\n            line = testLine;\n          }\n        }\n    \n        this.fillText(line, x, y);\n        y += lineHeight;\n      }\n  };\n  \n  CanvasRenderingContext2D.prototype.wrapStrokeText = function (text, x, y, maxWidth, lineHeight) {\n  \n    var lines = text.split(\"\\n\");\n  \n    for (var i = 0; i < lines.length; i++) {\n  \n      var words = lines[i].split(' ');\n      var line = '';\n  \n      for (var n = 0; n < words.length; n++) {\n        var testLine = line + words[n] + ' ';\n        var metrics = this.measureText(testLine);\n        var testWidth = metrics.width;\n        if (testWidth > maxWidth && n > 0) {\n          this.strokeText(line, x, y);\n          line = words[n] + ' ';\n          y += lineHeight;\n        }\n        else {\n          line = testLine;\n        }\n      }\n  \n      this.strokeText(line, x, y);\n      y += lineHeight;\n    }\n  };\n\n  export default {\n    name: '#meme',\n    mounted () {\n      // Upon mounting of the component, we accessed the .bind({...})\n      // function to put an initial image on the canvas.\n      this.$refs.croppieRef.bind({\n        url: 'http://i.imgur.com/Fv2YOM6.jpg'\n      })\n      setTimeout(() => {\n        this.crop()\n      }, 1000)\n    },\n    data() {\n        return {\n            cropped: null,\n            images: [\n              'http://i.imgur.com/fHNtPXX.jpg',\n              'http://i.imgur.com/ecMUngU.jpg',\n              'http://i.imgur.com/7oO6zrh.jpg',\n              'http://i.imgur.com/miVkBH2.jpg',\n              'http://i.imgur.com/Fv2YOM6.jpg'\n            ],\n            canvasElementId: 'canvas',\n            width: 600,\n            height: 400,\n            image: '',\n            presets: [\n                '../resources/meme1.jpg',\n                'assets/meme2.jpg'\n            ],\n            text: '',\n            textMaxWidth: 250,\n            textStrokeStyle: '#000000',\n            textFillStyle: '#FFFFFF',\n            textLineWidth: 2,\n            textPosition: {\n                x: 20,\n                y: 60\n            },\n            textFont: '48px \"Impact\", sans-serif',\n            textLineHeight: 60\n        }\n    },\n    methods: {\n\n      bind() {\n        // Randomize cat photos, nothing special here.\n        let url = this.images[Math.floor(Math.random() * this.images.length)];\n        // Just like what we did with .bind({...}) on \n        // the mounted() function above.\n        this.$refs.croppieRef.bind({\n          url: url,\n        });\n      },\n\n      // CALLBACK USAGE\n      crop() {\n        // Here we are getting the result via callback function\n        // and set the result to this.cropped which is being \n        // used to display the result above.\n        let options = {\n          format: 'jpeg'\n        }\n        this.$refs.croppieRef.result(options, (output) => {\n          this.cropped = output;\n        });\n      },\n\n      // EVENT USAGE\n      cropViaEvent() {\n        this.$refs.croppieRef.result(this.options);\n      },\n\n      result(output) {\n        this.cropped = output;\n      },\n\n      update(val) {\n        console.log(val);\n      },\n\n      rotate(rotationAngle) {\n        // Rotates the image\n        this.$refs.croppieRef.rotate(rotationAngle);\n      },\n\n      croppieInitialized() {\n        // This method will be executed when the croppie is initialized\n        // You can use it to set the image\n        // this.$refs.croppieRef.bind({\n        //   url: 'http://i.imgur.com/Fv2YOM6.jpg',\n        // });\n        console.log('Croppie was initialized');\n      },\n  \n      onFileChange: function(event) {\n        var files = event.target.files || event.dataTransfer.files;\n  \n        if (!files.length)\n          return;\n  \n        this.createImage(files[0]);\n      },\n  \n      onTextChange: function() {\n        this.repaint();\n  \n      },\n  \n      createImage: function(file) {\n        var reader = new FileReader();\n        var vm = this;\n  \n        reader.onload = function(event) {\n          vm.image = event.target.result;\n          vm.repaint();\n        };\n  \n        reader.readAsDataURL(file);\n      },\n  \n      setImageToCanvas: function(url, callback) {\n  \n        var ctx = this.getContext();\n        var background = new Image();\n        background.src = url;\n        background.onload = function() {\n          ctx.drawImage(background, 0, 0);\n          if ( typeof callback == 'function' ) {\n            callback();\n          }\n        };\n      },\n  \n      setTextToCanvas: function(text) {\n  \n        var context = this.getContext();\n        context.font = this.textFont;\n        context.fillStyle = this.textFillStyle;\n        context.wrapFillText(text, this.textPosition.x, this.textPosition.y, this.textMaxWidth, this.textLineHeight);\n        context.strokeStyle = this.textStrokeStyle;\n        context.lineWidth = this.textLineWidth;\n        context.wrapStrokeText(text, this.textPosition.x, this.textPosition.y, this.textMaxWidth, this.textLineHeight);\n  \n      },\n  \n      getContext: function() {\n  \n        return document.getElementById(this.canvasElementId).getContext(\"2d\");\n  \n      },\n  \n      repaint: function() {\n  \n        var vm = this;\n  \n        if ( this.image == '' )\n          this.setTextToCanvas(this.text);\n  \n        this.setImageToCanvas(this.image, function(){\n          vm.setTextToCanvas(vm.text);\n        });\n  \n      },\n  \n      reset: function () {\n        this.image = '';\n        this.text = '';\n        this.width = 600;\n        this.height = 450;\n        this.textStrokeStyle = '#000000';\n        this.textFillStyle = '#FFFFFF';\n        this.repaint();\n        this.getContext().clearRect(0, 0, this.width, this.height);\n      },\n  \n      download: function() {\n        var dt = document.getElementById(this.canvasElementId).toDataURL('image/png');\n  \n        /* Change MIME type to trick the browser to download the file instead of displaying it */\n        dt = dt.replace(/^data:image\\/[^;]*/, 'data:application/octet-stream');\n  \n        /* In addition to <a>'s \"download\" attribute, you can define HTTP-style headers */\n        dt = dt.replace(/^data:application\\/octet-stream/, 'data:application/octet-stream;headers=Content-Disposition%3A%20attachment%3B%20filename=Meme.png');\n  \n        document.getElementById('download').href = dt;\n      },\n    }\n  }\n\n</script>"],"sourceRoot":"src/ideas/memes"}]}
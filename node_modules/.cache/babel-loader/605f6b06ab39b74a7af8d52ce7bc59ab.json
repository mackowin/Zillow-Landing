{"remainingRequest":"/Users/nataliamackowiak/Documents/Startup/Meme/node_modules/babel-loader/lib/index.js!/Users/nataliamackowiak/Documents/Startup/Meme/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nataliamackowiak/Documents/Startup/Meme/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nataliamackowiak/Documents/Startup/Meme/node_modules/vue-typeahead-bootstrap/src/components/VueTypeaheadBootstrap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nataliamackowiak/Documents/Startup/Meme/node_modules/vue-typeahead-bootstrap/src/components/VueTypeaheadBootstrap.vue","mtime":1663347514287},{"path":"/Users/nataliamackowiak/Documents/Startup/Meme/node_modules/cache-loader/dist/cjs.js","mtime":1611962706588},{"path":"/Users/nataliamackowiak/Documents/Startup/Meme/node_modules/babel-loader/lib/index.js","mtime":1611962706532},{"path":"/Users/nataliamackowiak/Documents/Startup/Meme/node_modules/cache-loader/dist/cjs.js","mtime":1611962706588},{"path":"/Users/nataliamackowiak/Documents/Startup/Meme/node_modules/vue-loader/lib/index.js","mtime":1611962713166}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VueTypeaheadBootstrap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    :id=\"`typeahead-${id}`\"\n    role=\"combobox\"\n    aria-haspopup=\"listbox\"\n    :aria-owns=\"`result-list-${id}`\"\n    :aria-expanded=\"(isFocused && data.length > 0) ? 'true' : 'false'\"\n  >\n    <div :class=\"inputGroupClasses\">\n      <div ref=\"prependDiv\" v-if=\"$slots.prepend || prepend\" class=\"input-group-prepend\">\n        <slot name=\"prepend\">\n          <span class=\"input-group-text\">{{ prepend }}</span>\n        </slot>\n      </div>\n      <input\n        ref=\"input\"\n        :id=\"`typeahead-input-${id}`\"\n        type=\"text\"\n        role=\"searchbox\"\n        :class=\"`form-control ${inputClass}`\"\n        :aria-labelledby=\"ariaLabelledBy\"\n        aria-multiline=\"false\"\n        aria-autocomplete=\"list\"\n        :aria-controls=\"`result-list-${id}`\"\n        :aria-activedescendant=\"`selected-option-${id}`\"\n        :name=\"inputName\"\n        :placeholder=\"placeholder\"\n        :aria-label=\"(!ariaLabelledBy) ? placeholder : false\"\n        :value=\"inputValue\"\n        :disabled=\"disabled\"\n        @focus=\"isFocused = true\"\n        @blur=\"handleFocusOut\"\n        @input=\"handleInput($event.target.value)\"\n        @keydown.esc=\"handleEsc($event.target.value)\"\n        @keyup=\"$emit('keyup', $event)\"\n      />\n      <div v-if=\"$slots.append || append\" class=\"input-group-append\">\n        <slot name=\"append\">\n          <span class=\"input-group-text\">{{ append }}</span>\n        </slot>\n      </div>\n    </div>\n    <vue-typeahead-bootstrap-list\n      :id=\"`result-list-${id}`\"\n      class=\"vbt-autcomplete-list\"\n      ref=\"list\"\n      v-show=\"isFocused && data.length > 0\"\n      :query=\"inputValue\"\n      :data=\"formattedData\"\n      :background-variant=\"backgroundVariant\"\n      :background-variant-resolver=\"backgroundVariantResolver\"\n      :text-variant=\"textVariant\"\n      :maxMatches=\"maxMatches\"\n      :minMatchingChars=\"minMatchingChars\"\n      :disableSort=\"disableSort\"\n      :showOnFocus=\"showOnFocus\"\n      :showAllResults=\"showAllResults\"\n      @hit=\"handleHit\"\n      @listItemBlur=\"handleChildBlur\"\n      :highlightClass='highlightClass'\n      :disabledValues=\"disabledValues\"\n      :vbtUniqueId=\"id\"\n      role=\"listbox\"\n    >\n      <!-- pass down all scoped slots -->\n      <template v-for=\"(slot, slotName) in $scopedSlots\" :slot=\"slotName\" slot-scope=\"{ data, htmlText }\">\n        <slot :name=\"slotName\" v-bind=\"{ data, htmlText }\"></slot>\n      </template>\n      <!-- below is the right solution, however if the user does not provide a scoped slot, vue will still set $scopedSlots.suggestion to a blank scope\n      <template v-if=\"$scopedSlots.suggestion\" slot=\"suggestion\" slot-scope=\"{ data, htmlText }\">\n        <slot name=\"suggestion\" v-bind=\"{ data, htmlText }\" />\n      </template>-->\n    </vue-typeahead-bootstrap-list>\n  </div>\n</template>\n\n<script>\nimport VueTypeaheadBootstrapList from './VueTypeaheadBootstrapList.vue'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nexport default {\n  name: 'VueTypeaheadBootstrap',\n\n  components: {\n    VueTypeaheadBootstrapList\n  },\n\n  props: {\n    ariaLabelledBy: {\n      type: String,\n      default: null\n    },\n    size: {\n      type: String,\n      default: null,\n      validator: size => ['lg', 'md', 'sm'].indexOf(size) > -1\n    },\n    value: {\n      type: String\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    data: {\n      type: Array,\n      required: true,\n      validator: d => d instanceof Array\n    },\n    serializer: {\n      type: Function,\n      default: (d) => d,\n      validator: d => d instanceof Function\n    },\n    // Don't call this method, use _screenReaderTextSerializer()\n    // Using _screenReaderTextSerializer allows for defaulting based on .serializer\n    screenReaderTextSerializer: {\n      type: Function,\n      validator: d => d instanceof Function\n    },\n    backgroundVariant: String,\n    backgroundVariantResolver: {\n      type: Function,\n      default: (d) => d,\n      validator: d => d instanceof Function\n    },\n    disabledValues: {\n      type: Array,\n      default: () => []\n    },\n    textVariant: String,\n    inputClass: {\n      type: String,\n      default: ''\n    },\n    inputName: {\n      type: String,\n      default: undefined\n    },\n    maxMatches: {\n      type: Number,\n      default: 10\n    },\n    minMatchingChars: {\n      type: Number,\n      default: 2\n    },\n    disableSort: {\n      type: Boolean,\n      default: false\n    },\n    showOnFocus: {\n      type: Boolean,\n      default: false\n    },\n    showAllResults: {\n      type: Boolean,\n      default: false\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    },\n    ieCloseFix: {\n      type: Boolean,\n      default: true\n    },\n    placeholder: String,\n    prepend: String,\n    append: String,\n    highlightClass: String\n  },\n\n  computed: {\n    id() {\n      return Math.floor(Math.random() * 100000)\n    },\n    inputGroupClasses() {\n      return this.size ? `input-group input-group-${this.size}` : 'input-group'\n    },\n\n    formattedData() {\n      if (!(this.data instanceof Array)) {\n        return []\n      }\n      return this.data.map((d, i) => {\n        return {\n          id: i,\n          data: d,\n          screenReaderText: this._screenReaderTextSerializer(d),\n          text: this.serializer(d)\n        }\n      })\n    }\n  },\n\n  methods: {\n    _screenReaderTextSerializer(d){\n      if ( typeof d === \"object\" && !Array.isArray(d) && d !== null){\n       if (this.screenReaderTextSerializer){\n          return this.screenReaderTextSerializer(d)\n        } else {\n          return this.serializer(d)\n        }\n      } else {\n        return d\n      }\n    },\n    resizeList(el) {\n      const rect = el.getBoundingClientRect()\n      const listStyle = this.$refs.list.$el.style\n\n      // Set the width of the list on resize\n      listStyle.width = rect.width + 'px'\n\n      // Set the margin when the prepend prop or slot is populated\n      // (setting the \"left\" CSS property doesn't work)\n      if (this.$refs.prependDiv) {\n        const prependRect = this.$refs.prependDiv.getBoundingClientRect()\n        listStyle.marginLeft = prependRect.width + 'px'\n      }\n    },\n\n    handleHit(evt) {\n      if (typeof this.value !== 'undefined') {\n        this.$emit('input', evt.text)\n      }\n\n      this.inputValue = evt.text\n      this.$emit('hit', evt.data)\n\n      if (this.autoClose) {\n        this.$refs.input.blur()\n        this.isFocused = false\n      }\n    },\n\n    handleChildBlur() {\n      this.$refs.input.focus()\n      this.isFocused = false\n    },\n\n    runFocusOut(tgt) {\n      if (tgt && tgt.classList.contains('vbst-item')) {\n        return\n      }\n      this.isFocused = false\n    },\n\n    handleFocusOut(evt) {\n      const tgt = evt.relatedTarget\n      if (!!navigator.userAgent.match(/Trident.*rv:11\\./) && this.ieCloseFix) {\n        setTimeout(() => { this.runFocusOut(tgt) }, 300)\n      } else {\n        this.runFocusOut(tgt)\n      }\n    },\n\n    handleInput(newValue) {\n      this.isFocused = true\n      this.inputValue = newValue\n\n      // If v-model is being used, emit an input event\n      if (typeof this.value !== 'undefined') {\n        this.$emit('input', newValue)\n      }\n    },\n\n    handleEsc(inputValue) {\n      if (inputValue === '') {\n        this.$refs.input.blur()\n        this.isFocused = false\n      } else {\n        this.inputValue = ''\n      }\n    }\n  },\n\n  data() {\n    return {\n      isFocused: false,\n      inputValue: this.value || ''\n    }\n  },\n\n  mounted() {\n    this.$_ro = new ResizeObserver(e => {\n      this.resizeList(this.$refs.input)\n    })\n    this.$_ro.observe(this.$refs.input)\n    this.$_ro.observe(this.$refs.list.$el)\n  },\n\n  beforeDestroy() {\n    this.$_ro.disconnect()\n  },\n\n  watch: {\n    value: function(val) {\n      this.inputValue = val\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .vbt-autcomplete-list {\n    padding-top: 5px;\n    position: absolute;\n    max-height: 350px;\n    -ms-overflow-style: -ms-autohiding-scrollbar;\n    overflow-y: auto;\n    z-index: 999;\n  }\n  .vbt-autcomplete-list >>> .vbt-matched-text{\n    font-weight: bold;\n  }\n</style>\n"],"sourceRoot":"node_modules/vue-typeahead-bootstrap/src/components"}]}
{"remainingRequest":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/babel-loader/lib/index.js!/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/src/views/ideas/properties/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/src/views/ideas/properties/Dashboard.vue","mtime":1662661235705},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1611962706588},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/babel-loader/lib/index.js","mtime":1611962706532},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1611962706588},{"path":"/Users/nataliamackowiak/Documents/Startup/Tutors/Code/Tutomy-frontend/node_modules/vue-loader/lib/index.js","mtime":1611962713166}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <ve-table \n    style=\"width:100%\" \n    :columns=\"columns\" \n    :table-data=\"tableData\"\n    row-key-field-name=\"rowKey\"\n />\n                    <i class='far fa-heart fa-lg'>fa-heart</i>\n </div>\n</template>\n\n\n\n<script>\n\nimport img1 from './resources/photo13.jpeg';\nimport img2 from './resources/photo14.jpeg';\nimport img3 from './resources/photo15.jpeg';\nimport img4 from './resources/photo16.jpeg';\nimport img5 from './resources/banner-photo11.jpeg';\n\n\nexport default {\n  data() {\n    return {\n      columns: [\n        {\n          field: \"\",\n          key: \"a\",\n          title: \"\",\n          align: \"center\",\n          renderBodyCell: ( ) => {\n            return (\n                <span>\n                    <i class='fas fa-heart'>fa-heart</i>\n                </span>\n            );\n          },\n\n        },\n        {\n          field: \"image\",\n          key: \"b\",\n          title: \"\",\n          align: \"center\",\n          renderBodyCell: ({ row, column }) => {\n            const img = row[column.field]\n            return (\n                <span>\n                    <img src={img} style=\"height: 40px; border-radius: 15%\" />\n                </span>\n            );\n          },\n        },\n        {\n          fieldOne: \"postcode\",\n          fieldTwo: \"type\",\n          fieldThree: \"address\",\n          subField: \"source\",\n          key: \"c\",\n          title: \"Property\",\n          align: \"left\",\n          renderBodyCell: ({ row, column }) => {\n            const textPostcode = row[column.fieldOne];\n            const textType = row[column.fieldTwo];\n            const textAddress = row[column.fieldThree];\n            const link = row[column.subField];\n            return (\n                <span>\n                    <a href={link} target=\"_blank\" class=\"postcode-type\">\n                            {textPostcode}: {textType}\n                        <div class=\"address\">\n                            {textAddress}\n                        </div>\n                    </a>\n                </span>\n            );\n          },\n        },\n        {\n          field: \"price\",\n          key: \"d\",\n          title: \"Price (£)\",\n          align: \"right\",\n          renderBodyCell: ({ row, column }) => {\n            const text = row[column.field];\n            const number = parseInt(text, 10).toLocaleString();\n            return (\n                <span>\n                    {number}\n                </span>\n            );\n          },\n        },\n        {\n          field: \"rent\",\n          key: \"e\",\n          title: \"Rent estimate (£)\",\n          align: \"right\",\n          renderBodyCell: ({ row, column }) => {\n            const text = row[column.field];\n            const number = parseInt(text, 10).toLocaleString();\n            return (\n                <span>\n                    {number}\n                </span>\n            );\n          },\n        },\n        {\n          subFieldOne: \"rent\",\n          subFieldTwo: \"price\",\n          key: \"f\",\n          title: \"Rent/Price\",\n          align: \"right\",\n          renderBodyCell: ({ row, column }) => {\n            const rentInput = row[column.subFieldOne];\n            const priceInput = row[column.subFieldTwo];\n            const rentNumber = parseInt(rentInput, 10);\n            const priceNumber = parseInt(priceInput, 10);\n            const ratio = (rentNumber / priceNumber * 100).toFixed(1)\n            \n            return (\n                <span>\n                    {ratio}%\n                </span>\n            );\n          },\n        },\n        {\n          subFieldOne: \"rent\",\n          subFieldTwo: \"price\",\n          key: \"g\",\n          title: \"Gross yield\",\n          align: \"right\",\n          renderBodyCell: ({ row, column }) => {\n            const rentInput = row[column.subFieldOne];\n            const priceInput = row[column.subFieldTwo];\n            const rentNumber = parseInt(rentInput, 10);\n            const priceNumber = parseInt(priceInput, 10);\n            const ratio = (rentNumber / priceNumber * 100 * 12).toFixed(0)\n            return (\n                <span>\n                    {ratio}%\n                </span>\n            );\n          },\n        },\n        {\n          subFieldOne: \"rent\",\n          subFieldTwo: \"sqft\",\n          key: \"h\",\n          title: \"Rent / sqft\",\n          width: \"\",\n          align: \"right\",\n          renderBodyCell: ({ row, column }) => {\n              const rentInput = row[column.subFieldOne];\n              const sqftInput = row[column.subFieldTwo];\n              const rentNumber = parseInt(rentInput, 10);\n              const sqftNumber = parseInt(sqftInput, 10);\n              const ratio = (rentNumber / sqftNumber).toFixed(1)\n              return (\n                  <span>\n                      {ratio}\n                  </span>\n              );\n            },\n        },\n        {\n          field: \"beds\",\n          key: \"i\",\n          title: \"Beds\",\n          align: \"right\",\n          renderBodyCell: ({ row, column }) => {\n            const text = row[column.field];\n            return (\n                <span>\n                    {text}\n                </span>\n            );\n          },\n        },\n        {\n          field: \"baths\",\n          key: \"j\",\n          title: \"Baths\",\n          align: \"right\",\n          renderBodyCell: ({ row, column }) => {\n            const text = row[column.field];\n            return (\n                <span>\n                    {text}\n                </span>\n            );\n          },\n        },\n        {\n          field: \"sqft\",\n          key: \"k\",\n          title: \"Sq ft\",\n          align: \"right\",\n          renderBodyCell: ({ row, column }) => {\n            const text = row[column.field];\n            const number = parseInt(text, 10).toLocaleString();\n            return (\n                <span>\n                    {number}\n                </span>\n            );\n          },\n        },\n        {\n          field: \"source\",\n          key: \"l\",\n          title: \"Listing\",\n          width: \"\",\n          center: \"left\",\n          renderBodyCell: ({ row, column }) => {\n            const link = row[column.field];\n            return (\n                <span>\n                    <a href={link} target=\"_blank\" class=\"button-demo\">\n                        See details\n                    </a>\n                </span>\n            );\n          },\n        },\n      ],\n      tableData: [\n        {\n          image: img1,\n          postcode: \"E11\",\n          type: \"1 bed flat\",\n          address: \"1 Glengall Grove, London\",\n          price: \"100000\",\n          rent: \"1500\",\n          beds: \"1\",\n          baths: \"2\",\n          sqft: \"1111\",\n          source: \"http://www.wikipedia.com\",\n        },\n        {\n          image: img2,\n          postcode: \"E12\",\n          type: \"2 bed flat\",\n          address: \"2 Glengall Grove, London\",\n          price: \"200000\",\n          rent: \"2500\",\n          beds: \"2\",\n          baths: \"3\",\n          sqft: \"2222\",\n          source: \"http://www.onet.pl\",\n        },\n        {\n          image: img3,\n          postcode: \"E13\",\n          type: \"3 bed flat\",\n          address: \"3 Glengall Grove, London\",\n          price: \"300000\",\n          rent: \"3500\",\n          beds: \"3\",\n          baths: \"4\",\n          sqft: \"3333\",\n          source: \"http://www.codecademy.com\",\n        },\n        {\n          image: img4,\n          postcode: \"E14\",\n          type: \"4 bed flat\",\n          address: \"4 Glengall Grove, London\",\n          price: \"400000\",\n          rent: \"4500\",\n          beds: \"4\",\n          baths: \"5\",\n          sqft: \"4444\",\n          source: \"http://www.github.com\",\n        },\n        {\n          image: img5,\n          postcode: \"E15\",\n          type: \"5 bed flat\",\n          address: \"5 Glengall Grove, London\",\n          price: \"500000\",\n          rent: \"5500\",\n          beds: \"5\",\n          baths: \"6\",\n          sqft: \"5555\",\n          source: \"http://www.wikipedia.com\",\n        },\n      ],\n      /*\n      methods: {\n          upsell(rowIndex) {\n              alert(`To savew ${rowIndex} contact us to upgrade to PRO PLAN (£69). Find all features included in PRO PLAN on our website: www.doorhacker.com`)\n          }\n      }, */\n    }\n  }\n};\n</script>\n\n<style>\na.button-demo {\n    color: #fff !important;\n    background-color: #5457c1;\n    display: inline-block;\n    line-height: 1;\n    white-space: nowrap;\n    cursor: pointer;\n    border: 1px solid #5457c1;\n    -webkit-appearance: none;\n    text-align: center;\n    box-sizing: border-box;\n    outline: none;\n    margin: 0;\n    transition: 0.1s;\n    font-weight: 500;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    padding: 10px 20px !important;\n    font-size: 14px;\n    border-radius: 3px;\n};\n\na.button-demo:hover {\n    background: #c679e3;\n    border-color: #c679e3;\n    color: #fff;\n}\n\na.button-demo:active {\n    background: #c679e3;\n    border-color: #c679e3;\n    color: #fff;\n}\n\na.postcode-type {\n    color: #5457c1; \n    font-weight: 500;\n}\n\na.postcode-type:hover {\n    color: #5457c1;\n    text-decoration: rgba(84,87,193, 0.4) underline;\n    transition: none;\n}\n\n.address {\n  color: #a3a2a2; \n  font-size: 11px;\n}\n\n</style>\n"],"sourceRoot":"src/views/ideas/properties"}]}